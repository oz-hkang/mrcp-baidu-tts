# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libsofia-sip-ua/features/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Makefile.am for sofia features module
#
# Copyright (C) 2005,2006 Nokia Corporation
# Contact: Pekka Pessi <pekka.pessi@nokia.com>
# Licensed under LGPL. See file COPYING.

# ----------------------------------------------------------------------
# Header paths

# common Makefile targets for libsofia-sip-ua(-glib) modules
# ----------------------------------------------------------

#
# run tests with valgrind
#

# Copyright (C) 2007 Nokia Corporation.

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.

# This file contains free software from Makefile.in by the Free Software
# Foundation:

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#
# Generate lcov output
#

#
# Copyright (C) 2007 Nokia Corporation
# Contact: Pekka Pessi <pekka.pessi@nokia.com>
# Licensed under LGPL. See file COPYING.
#

# Silent compilation w/ Automake 1.9 or 1.10
# ----------------------------------------------------------

# Automake 1.9.6 is not clever enough to override suffix rules within if
# if SOFIA_COMPILE_SILENT



pkgdatadir = $(datadir)/sofia-sip
pkgincludedir = $(includedir)/sofia-sip
pkglibdir = $(libdir)/sofia-sip
pkglibexecdir = $(libexecdir)/sofia-sip
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(nobase_include_sofia_HEADERS) $(srcdir)/Doxyfile.in \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/rules/lcov.am $(top_srcdir)/rules/silent.am \
	$(top_srcdir)/rules/sofia.am $(top_srcdir)/rules/valcheck.am \
	ChangeLog

# Use with --enable-ndebug
#am__append_1 = -DNDEBUG
am__append_2 = --frames
am__append_3 = lcov lcov-report lcov-rerun clean-lcov covcheck uncovered
subdir = libsofia-sip-ua/features
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/sac-coverage.m4 \
	$(top_srcdir)/m4/sac-general.m4 \
	$(top_srcdir)/m4/sac-openssl.m4 \
	$(top_srcdir)/m4/sac-pkg-config.m4 $(top_srcdir)/m4/sac-su2.m4 \
	$(top_srcdir)/m4/sac-tport.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/libsofia-sip-ua/su/sofia-sip/su_configure.h
CONFIG_CLEAN_FILES = Doxyfile
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libfeatures_la_LIBADD =
am_libfeatures_la_OBJECTS = features.lo
libfeatures_la_OBJECTS = $(am_libfeatures_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/libsofia-sip-ua/su/sofia-sip
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
SOURCES = $(libfeatures_la_SOURCES)
DIST_SOURCES = $(libfeatures_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(include_sofiadir)"
HEADERS = $(nobase_include_sofia_HEADERS)
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = -I m4
ALLOCA = 
AMTAR = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run autoconf
AUTOHEADER = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run autoheader
AUTOMAKE = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHECK_CFLAGS = 
CHECK_LIBS = 
COVERAGE_FLAGS = 
CPP = gcc -E
CPPFLAGS = 
CWFLAG = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = echo
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ETAGS = echo
EXEEXT = 
FGREP = /bin/grep -F
GCOV = 
GENHTML = 
GENPNG = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GLIB_VERSION = 
GREP = /bin/grep
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBVER_SOFIA_SIP_UA_AGE = 6
LIBVER_SOFIA_SIP_UA_CUR = 6
LIBVER_SOFIA_SIP_UA_GLIB_AGE = 0
LIBVER_SOFIA_SIP_UA_GLIB_CUR = 3
LIBVER_SOFIA_SIP_UA_GLIB_REV = 0
LIBVER_SOFIA_SIP_UA_GLIB_SOVER = 3
LIBVER_SOFIA_SIP_UA_REV = 0
LIBVER_SOFIA_SIP_UA_SOVER = 0
LIPO = 
LN_S = cp -p
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/missing --run makeinfo
MINGW_ENVIRONMENT = 
MKDIR_P = /bin/mkdir -p
MOSTLYCLEANFILES = *.bb *.bbg *.da *.gcov *.gcda *.gcno
NM = /bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = sofia-sip
PACKAGE_BUGREPORT = 
PACKAGE_NAME = sofia-sip
PACKAGE_STRING = sofia-sip 1.12.11-234-gd74df2e
PACKAGE_TARNAME = sofia-sip
PACKAGE_VERSION = 1.12.11-234-gd74df2e
PATH_SEPARATOR = :
PKG_CONFIG = /bin/pkg-config
RANLIB = ranlib
REPLACE_LIBADD =  memspn.lo memcspn.lo
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOFIA_CFLAGS = 
SOFIA_GLIB_CFLAGS = 
SOFIA_GLIB_PKG_REQUIRES = 
SOFIA_PLAT_CFLAGS = 
STRIP = strip
TESTS_ENVIRONMENT = 
VERSION = 1.12.11-234-gd74df2e
VER_LIBSOFIA_SIP_UA_MAJOR_MINOR = 1.12
abs_builddir = /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/libsofia-sip-ua/features
abs_srcdir = /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/libsofia-sip-ua/features
abs_top_builddir = /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip
abs_top_srcdir = /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
include_sofiadir = ${includedir}/sofia-sip-1.12
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/cotin/share/unimrcp-deps-1.5.0/libs/sofia-sip/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
openssl_CFLAGS =  
openssl_LIBS = -lssl -lcrypto  
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = $(INTERNAL_INCLUDES)

# ----------------------------------------------------------------------
# Build targets
noinst_LTLIBRARIES = libfeatures.la

# ----------------------------------------------------------------------
# Rules for building the targets

# This is used by platforms not supporting autoconf
nobase_include_sofia_HEADERS = sofia-sip/sofia_features.h
libfeatures_la_SOURCES = features.c

# ----------------------------------------------------------------------
# Install and distribution rules
EXTRA_DIST = features.docs

# ----------------------------------------------------------------------
# Sofia specific rules
LDADD = $(openssl_LIBS)
sofiasrcdir = ${top_srcdir}/libsofia-sip-ua
sofiabuilddir = ${top_builddir}/libsofia-sip-ua
AM_CFLAGS = $(CWFLAG) $(SOFIA_COVERAGE) $(SOFIA_CFLAGS) \
	$(openssl_CFLAGS) $(SOFIA_PLAT_CFLAGS) $(am__append_1)
SOFIA_COVERAGE = $(COVERAGE_FLAGS)
DISTCLEANFILES = $(BUILT_SOURCES)

# rules for building tag files
TAG_AWK = ${sofiasrcdir}/su/tag_dll.awk
SUFFIXES = _tag_ref.c _tag.c
INTERNAL_INCLUDES = \
    -I${sofiasrcdir}/features -I${sofiabuilddir}/features \
    -I${sofiasrcdir}/ipt -I${sofiabuilddir}/ipt \
    -I${sofiasrcdir}/iptsec -I${sofiabuilddir}/iptsec \
    -I${sofiasrcdir}/bnf -I${sofiabuilddir}/bnf \
    -I${sofiasrcdir}/http -I${sofiabuilddir}/http \
    -I${sofiasrcdir}/msg -I${sofiabuilddir}/msg \
    -I${sofiasrcdir}/nth -I${sofiabuilddir}/nth \
    -I${sofiasrcdir}/nta -I${sofiabuilddir}/nta \
    -I${sofiasrcdir}/nea -I${sofiabuilddir}/nea \
    -I${sofiasrcdir}/nua -I${sofiabuilddir}/nua \
    -I${sofiasrcdir}/soa -I${sofiabuilddir}/soa \
    -I${sofiasrcdir}/sdp -I${sofiabuilddir}/sdp \
    -I${sofiasrcdir}/sip -I${sofiabuilddir}/sip \
    -I${sofiasrcdir}/soa -I${sofiabuilddir}/soa \
    -I${sofiasrcdir}/sresolv -I${sofiabuilddir}/sresolv \
    -I${sofiasrcdir}/tport -I${sofiabuilddir}/tport \
    -I${sofiasrcdir}/stun -I${sofiabuilddir}/stun \
    -I${sofiasrcdir}/url -I${sofiabuilddir}/url \
    -I${sofiasrcdir}/su -I${sofiabuilddir}/su

PHONY = built-sources clean-built-sources $(am__append_3)
VALGRIND = valgrind
VALGRINDFLAGS = --tool=memcheck

# Scripts
LCOV_UNCOVERED = ${top_srcdir}/scripts/uncovered
LCOV_REPORT = ${top_srcdir}/scripts/lcov-report

# Report directory
lcovdir = ${top_builddir}/lcov

# Options
GENHTML_OPTIONS = --show-details --legend \
	$(am__append_2)

# Fancy shell command that expands to directory relative to top_builddir
expand_subdir = `pwd|sed "s'\`cd ${top_builddir};pwd\`''"`
SOFIA_SILENT = @
LIBTOOL_FLAGS = --silent

# From Automake 1.9.6 - 
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(LIBTOOL_FLAGS) \
	$(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)

LINK = ${SOFIA_SILENT}test "${SOFIA_SILENT}" != @ || echo '	 LINK $@'; \
	$(LIBTOOL) --tag=CC --mode=link $(LIBTOOL_FLAGS) \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@

all: all-am

.SUFFIXES:
.SUFFIXES: _tag_ref.c _tag.c .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/rules/sofia.am $(top_srcdir)/rules/valcheck.am $(top_srcdir)/rules/lcov.am $(top_srcdir)/rules/silent.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libsofia-sip-ua/features/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libsofia-sip-ua/features/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
Doxyfile: $(top_builddir)/config.status $(srcdir)/Doxyfile.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfeatures.la: $(libfeatures_la_OBJECTS) $(libfeatures_la_DEPENDENCIES) 
	$(LINK)  $(libfeatures_la_OBJECTS) $(libfeatures_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/features.Plo

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_include_sofiaHEADERS: $(nobase_include_sofia_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_sofiadir)" || $(MKDIR_P) "$(DESTDIR)$(include_sofiadir)"
	@list='$(nobase_include_sofia_HEADERS)'; test -n "$(include_sofiadir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(include_sofiadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(include_sofiadir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(include_sofiadir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(include_sofiadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_include_sofiaHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_sofia_HEADERS)'; test -n "$(include_sofiadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(include_sofiadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(include_sofiadir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(include_sofiadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#clean-local:
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_include_sofiaHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_include_sofiaHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man \
	install-nobase_include_sofiaHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am \
	uninstall-nobase_include_sofiaHEADERS


built-sources: $(BUILT_SOURCES)

clean-built-sources:
	-rm -rf $(BUILT_SOURCES) $(BUILT_SOURCES:%=$(srcdir)/%)

*_tag_ref.c: $(TAG_AWK)

_tag.c_tag_ref.c:
	$(AWK) -f $(TAG_AWK) NODLL=1 $(TAG_DLL_FLAGS) REF=$@ $<

../bnf/libbnf.la ../http/libhttp.la ../ipt/libipt.la ../iptsec/libiptsec.la \
 ../msg/libmsg.la ../nea/libnea.la ../nta/libnta.la ../nth/libnth.la \
 ../nua/libnua.la ../sdp/libsdp.la ../sip/libsip.la ../soa/libsoa.la \
 ../sresolv/libsresolv.la ../stun/libstun.la ../su/libsu.la \
 ../tport/libtport.la ../url/liburl.la:
	cd $(@D) && $(MAKE) $(@F)

checklib: $(noinst_LTLIBRARIES) $(check_LTLIBRARIES)

valcheck: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) valcheck-am

valcheck-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) valcheck-TESTS

# Run tests with valgrind in
valcheck-TESTS:	$(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if case $$tst in \
            run*) VALGRIND="$(VALGRIND) $(VALGRINDFLAGS)" \
		  $(TESTS_ENVIRONMENT) $${dir}$$tst ;; \
	    *) $(TESTS_ENVIRONMENT) $(VALGRIND) $(VALGRINDFLAGS) \
	       $${dir}$$tst ;; \
	    esac ; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

#
# Generate pretty coverage report (unless it has been already done)
#
lcov:
	@-test -r ${lcovdir}${expand_subdir}/lcov.info \
	|| make lcov-report

# Generate pretty coverage report based on current coverage data
lcov-report:
	sub=${expand_subdir} odir=${lcovdir}$$sub ; \
	rm -rf $$odir ; mkdir -p $$odir && \
	${LCOV_REPORT} ${GENHTML_OPTIONS} \
          --title "${PACKAGE_NAME}-${PACKAGE_VERSION}$$sub" \
	  --srcdir=${srcdir} -o $$odir

# Rerun checks before generating report
lcov-rerun: clean-lcov
	$(MAKE) $(AM_MAKEFLAGS) check
	$(MAKE) $(AM_MAKEFLAGS) lcov-report

# Show all uncovered lines as errors
uncovered:
	${LCOV_UNCOVERED} --lcov-dir=${lcovdir} --srcdir=${srcdir}

# Run check in current dir and show all uncovered lines as errors
covcheck:
	-find . -name "*.gcda" | xargs rm -rf
	$(MAKE) $(AM_MAKEFLAGS) check
	${LCOV_UNCOVERED} --lcov-dir=${lcovdir} --srcdir=${srcdir}

clean-local::
	-rm -rf ${lcovdir}`pwd|sed "s'\`cd ${top_builddir};pwd\`''"`
	find . -name "*.gcda" | xargs rm -f || true

clean-lcov:
	-rm -rf ${lcovdir}`pwd|sed "s'\`cd ${top_builddir};pwd\`''"`
	find . -name "*.gcda" | xargs rm -f || true

# Rules from depend2.am (GENERIC = TRUE, SUBDIROBJ = FALSE, %FASTDEP% = am_fastdepCC) silenced. 
.c.o:
	@test "${SOFIA_SILENT}" != @ || echo '	 COMPILE $@'
	${SOFIA_SILENT}if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	${SOFIA_SILENT}source='$<' object='$@' libtool=no \
#	DEPDIR="$(DEPDIR)" $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<
##	${SOFIA_SILENT}$(COMPILE) -c -o $@ $<

.c.lo:
	@test "${SOFIA_SILENT}" != @ || echo '	 LTCOMPILE $@'
	${SOFIA_SILENT}if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	${SOFIA_SILENT}source='$<' object='$@' libtool=yes \
#	DEPDIR="$(DEPDIR)" $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<
##	${SOFIA_SILENT}$(LTCOMPILE) -c -o $@ $<

# endif

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
